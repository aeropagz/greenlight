basePath: /
definitions:
  data.Healthcheck:
    properties:
      enviroment:
        type: string
      status:
        type: string
      version:
        type: string
    type: object
  data.Movie:
    properties:
      genres:
        items:
          type: string
        type: array
      id:
        type: integer
      runtime:
        type: integer
      title:
        type: string
      version:
        type: integer
      year:
        type: integer
    type: object
  data.MovieCreation:
    properties:
      genres:
        items:
          type: string
        type: array
      runtime:
        type: integer
      title:
        type: string
      year:
        type: integer
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:4000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: 1.0.0
paths:
  /v1/healthcheck:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/data.Healthcheck'
      summary: Show server status
      tags:
      - Status
  /v1/movies:
    post:
      consumes:
      - application/json
      parameters:
      - description: Movie creation dto
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/data.MovieCreation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/data.Movie'
      summary: Create an a movie
      tags:
      - Movie
  /v1/movies/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Movie Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/data.Movie'
      summary: Show an a movie
      tags:
      - Movie
    put:
      consumes:
      - application/json
      parameters:
      - description: Movie Id
        in: path
        name: id
        required: true
        type: integer
      - description: Movie creation dto
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/data.MovieCreation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/data.Movie'
      summary: Show an a movie
      tags:
      - Movie
swagger: "2.0"
